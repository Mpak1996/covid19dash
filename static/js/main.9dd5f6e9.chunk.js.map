{"version":3,"sources":["images/logo2.jpg","components/Card.jsx","components/Cards.jsx","service/api.js","components/Countries.jsx","components/Chart.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","header","background","padding","CardComponent","cardTitle","value","desc","lastUpdate","classes","Grid","component","Card","style","margin","borderBottom","Box","className","Typography","variant","color","CardContent","start","end","duration","separator","Date","toDateString","useStyles","flexDirection","alignItems","display","container","marginBottom","Cards","data","confirmed","recovered","deaths","gutterBottom","spacing","justify","CircularProgress","url","fetchData","country","a","changedUrl","axios","get","fetchCountries","countries","map","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchApi","NativeSelect","onChange","e","target","i","width","marginTop","Chart","labels","datasets","label","backgroundColor","options","legend","title","text","App","state","fetchedData","setState","console","log","this","props","lastUpdated","src","logo","alt","Component","withStyles","justifyContent","textAlign","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dd5f6e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo2.78820c3a.jpg\";","import { CardContent, Grid, Typography, Box, Card, makeStyles } from \"@material-ui/core\"\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nconst useStyle = makeStyles({\r\n    header:{\r\n        background: '#F5F5F5',\r\n        padding:10\r\n    }\r\n})\r\n\r\nconst CardComponent = ({cardTitle, value, desc, lastUpdate}) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Grid component={Card} style={{margin:20,borderBottom: '10px solid #EA0E00'}}>\r\n            <Box className={classes.header}>\r\n                <Typography variant=\"h5\" color=\"black\">{cardTitle}</Typography>\r\n            </Box>\r\n            <CardContent>\r\n                <Typography variant=\"h5\">\r\n                <CountUp start={0} end={value} duration={3} separator=\".\"/>\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{desc}</Typography>\r\n                <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default CardComponent;","\r\nimport { Typography, Box, makeStyles, CircularProgress, Grid } from \"@material-ui/core\";\r\nimport Card from './Card';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        margin: \"50px 0\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        display: 'flex'\r\n    },\r\n    container: {\r\n        color: \"#EA0E00\",\r\n        marginBottom: 40\r\n    }\r\n})\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }}) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    if(!confirmed){\r\n        return <CircularProgress />\r\n    }\r\n\r\n\r\n    return(\r\n        <Box className={classes.component}>\r\n            <Typography className = {classes.container} variant=\"h4\" gutterBottom>Coronavirus Global Cases</Typography>\r\n            <Grid container spacing={3} justify=\"center\">\r\n            <Card\r\n                cardTitle= \"Infected\"\r\n                value={confirmed.value}\r\n                desc= \"Number of Infected Cases of Covid-19\"\r\n                lastUpdate={lastUpdate}\r\n                \r\n            />\r\n            <Card\r\n                cardTitle= \"Recovered\"\r\n                value={recovered.value}\r\n                desc= \"Number of Recovered Cases of Covid-19\"\r\n                lastUpdate={lastUpdate}\r\n            />\r\n            <Card\r\n                cardTitle= \"Deaths\"\r\n                value={deaths.value}\r\n                desc= \"Number of Deaths caused by Covid-19\"\r\n                lastUpdate={lastUpdate}\r\n            />\r\n            </Grid>\r\n        </Box>\r\n    \r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from'axios'\r\n\r\nconst url = \"https://covid19.mathdro.id/api/\";\r\n\r\n\r\n\r\nexport const fetchData = async (country) => {\r\n    let changedUrl = url;\r\n    if (country){\r\n        changedUrl = `${url}countries/${country}`;\r\n    }\r\n    try{\r\n        const {data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changedUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n        }catch(error)\r\n         {\r\n             return error;\r\n         }\r\n\r\n\r\n}\r\n\r\n\r\nexport const fetchCountries = async() => {\r\n    try{\r\n        const {data: { countries} } = await axios.get(`${url}countries`);\r\n        return countries.map(country=> country.name);\r\n        }\r\n        catch(error){\r\n            return error;\r\n        }   \r\n\r\n}","import { NativeSelect, Typography} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchCountries } from \"../service/api\";\r\n\r\n\r\n\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n\r\n    const [ countries, setCountries ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async() => {\r\n           setCountries(await fetchCountries());\r\n        }\r\n        fetchApi();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography style={{marginBottom: 20}} variant=\"h5\" color=\"black\">Reported Cases, Recoveries and Deaths by Country </Typography>\r\n            <NativeSelect onChange = {(e) => handleCountryChange(e.target.value)}>\r\n                 <option value = \"\">Select a Country:</option>\r\n                 {countries.map((country, i) => { \r\n                  return(\r\n                      <option key={i} value={country}>{country}</option>\r\n                    )\r\n                })}\r\n             \r\n            </NativeSelect>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Countries;","import { Bar } from 'react-chartjs-2';\r\nimport { Box, makeStyles} from '@material-ui/core';\r\n\r\n\r\nconst useStyle = makeStyles({\r\n        container : {\r\n            width: '70%',\r\n            marginTop: 50\r\n\r\n        }\r\n}) \r\n\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths}}) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Box className = {classes.container}>\r\n            {confirmed ? (\r\n            <Bar\r\n                data= { {\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        data: [confirmed.value, recovered.value, deaths.value],\r\n                        backgroundColor: [\r\n                            'rgba(255, 0, 0, 0.7)',\r\n                            'rgba(0, 255, 0, 0.7)',\r\n                            'rgba(0, 0, 0, 0.7)',\r\n                            \r\n                            \r\n                        ],\r\n                    \r\n                    }]\r\n                }}\r\n                    options = {{\r\n                        legend: {display: false},\r\n                        title: {display:true, text: 'Covid-19 Graph'}\r\n\r\n                    }}\r\n                \r\n                \r\n            /> ) : \"\"\r\n        }</Box>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Chart;\r\n\r\n    \r\n\r\n","import { Component } from \"react\";\r\nimport { Box, Typography, withStyles } from '@material-ui/core';\r\n\r\nimport logo from './images/logo2.jpg';\r\nimport Cards  from './components/Cards';\r\nimport { fetchData } from \"./service/api\";\r\nimport Countries from \"./components/Countries\";\r\nimport Chart from \"./components/Chart\";\r\n\r\nconst style = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n    },\r\n    \r\n    header: {\r\n      background: '#F5F5F5',\r\n      width: 500,\r\n      textAlign: 'center',\r\n      fontSize: 32,\r\n      padding: 15,\r\n      color: 'black'\r\n\r\n    },\r\n    lastUpdated: {\r\n      color: 'black',\r\n      fontSize: 15\r\n    }\r\n}\r\n\r\n\r\nclass App extends Component{\r\n\r\n  state={\r\n    data: {},\r\n    country: ''\r\n\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n    this.setState({data: fetchedData})\r\n    console.log(fetchedData);\r\n  }\r\n\r\n\r\n   handleCountryChange = async(country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({data: fetchedData, country: country})\r\n    console.log(fetchedData);\r\n  }\r\n\r\n  render(){\r\n    const { data } = this.state;\r\n    return(\r\n      <Box className={this.props.classes.container}>\r\n         <Box className={this.props.classes.header}>COVID-19 Pandemic Dashboard</Box>\r\n         <Typography className={this.props.classes.lastUpdated}>Last Update: {data.lastUpdate && new Date(data.lastUpdate).toDateString()}</Typography>\r\n         <img style={{width:480}} src={logo} alt=\"covid\"/>\r\n         <Cards data={data}/>\r\n         <Countries handleCountryChange={this.handleCountryChange}/>\r\n         <Chart data={data}/>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(style)(App);","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}