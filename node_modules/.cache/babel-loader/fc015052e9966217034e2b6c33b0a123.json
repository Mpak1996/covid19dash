{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giann\\\\covid19dash\\\\src\\\\components\\\\Countries.jsx\",\n    _s = $RefreshSig$();\n\nimport { NativeSelect, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCountries } from \"../service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countries = ({\n  handleCountryChange\n}) => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    const fetchApi = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchApi();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        marginBottom: 20\n      },\n      variant: \"h5\",\n      color: \"textSecondary\",\n      children: \"Reported Cases or Deaths by Country or Territory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NativeSelect, {\n      onChange: e => handleCountryChange(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Greece\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this), countries.map((country, i) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 23\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Countries, \"9l6FHV6h6vaYRYJZdH6ctuqWDlM=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/Users/giann/covid19dash/src/components/Countries.jsx"],"names":["NativeSelect","Typography","useEffect","useState","fetchCountries","Countries","handleCountryChange","countries","setCountries","fetchApi","marginBottom","e","target","value","map","country","i"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,UAAvB,QAAwC,mBAAxC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;;AAKA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAAA;;AAE3C,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,QAAQ,GAAG,YAAW;AACzBD,MAAAA,YAAY,CAAC,MAAMJ,cAAc,EAArB,CAAZ;AACF,KAFD;;AAGAK,IAAAA,QAAQ;AACX,GALQ,EAKN,EALM,CAAT;AAQA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf,OAAnB;AAAuC,MAAA,OAAO,EAAC,IAA/C;AAAoD,MAAA,KAAK,EAAC,eAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAKC,CAAD,IAAOL,mBAAmB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAApD;AAAA,8BACK;AAAQ,QAAA,KAAK,EAAG,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,EAEMN,SAAS,CAACO,GAAV,CAAc,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC9B,4BACI;AAAgB,UAAA,KAAK,EAAED,OAAvB;AAAA,oBAAiCA;AAAjC,WAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGD,OAJC,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAeH,CA3BD;;GAAMX,S;;KAAAA,S;AA6BN,eAAeA,SAAf","sourcesContent":["import { NativeSelect, Typography} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchCountries } from \"../service/api\";\r\n\r\n\r\n\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n\r\n    const [ countries, setCountries ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async() => {\r\n           setCountries(await fetchCountries());\r\n        }\r\n        fetchApi();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography style={{marginBottom: 20}} variant=\"h5\" color=\"textSecondary\">Reported Cases or Deaths by Country or Territory</Typography>\r\n            <NativeSelect onChange = {(e) => handleCountryChange(e.target.value)}>\r\n                 <option value = \"\">Greece</option>\r\n                 {countries.map((country, i) => { \r\n                  return(\r\n                      <option key={i} value={country}>{country}</option>\r\n                    )\r\n                })}\r\n             \r\n            </NativeSelect>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Countries;"]},"metadata":{},"sourceType":"module"}