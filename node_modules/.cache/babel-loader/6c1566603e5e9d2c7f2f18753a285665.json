{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/giann/covid19dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/giann/covid19dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var url=\"https://covid19.mathdro.id/api/\";export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var changedUrl,_yield$axios$get,_yield$axios$get$data,confirmed,recovered,deaths,lastUpdate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:changedUrl=url;if(country){changedUrl=\"\".concat(url,\"countries/\").concat(country);}_context.prev=2;_context.next=5;return axios.get(changedUrl);case 5:_yield$axios$get=_context.sent;_yield$axios$get$data=_yield$axios$get.data;confirmed=_yield$axios$get$data.confirmed;recovered=_yield$axios$get$data.recovered;deaths=_yield$axios$get$data.deaths;lastUpdate=_yield$axios$get$data.lastUpdate;return _context.abrupt(\"return\",{confirmed:confirmed,recovered:recovered,deaths:deaths,lastUpdate:lastUpdate});case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);return _context.abrupt(\"return\",_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();export var fetchCountries=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get2,countries;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"\".concat(url,\"countries\"));case 3:_yield$axios$get2=_context2.sent;countries=_yield$axios$get2.data.countries;return _context2.abrupt(\"return\",countries.map(function(country){return country.name;}));case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",_context2.t0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function fetchCountries(){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/giann/covid19dash/src/service/api.js"],"names":["axios","url","fetchData","country","changedUrl","get","data","confirmed","recovered","deaths","lastUpdate","fetchCountries","countries","map","name"],"mappings":"+RAAA,MAAOA,CAAAA,KAAP,KAAiB,OAAjB,CAEA,GAAMC,CAAAA,GAAG,CAAG,iCAAZ,CAIA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,iBAAOC,OAAP,8MACjBC,UADiB,CACJH,GADI,CAErB,GAAIE,OAAJ,CAAY,CACRC,UAAU,WAAMH,GAAN,sBAAsBE,OAAtB,CAAV,CACH,CAJoB,sCAMmDH,CAAAA,KAAK,CAACK,GAAN,CAAUD,UAAV,CANnD,8EAMVE,IANU,CAMFC,SANE,uBAMFA,SANE,CAMSC,SANT,uBAMSA,SANT,CAMoBC,MANpB,uBAMoBA,MANpB,CAM4BC,UAN5B,uBAM4BA,UAN5B,iCAOV,CAAEH,SAAS,CAATA,SAAF,CAAaC,SAAS,CAATA,SAAb,CAAwBC,MAAM,CAANA,MAAxB,CAAgCC,UAAU,CAAVA,UAAhC,CAPU,8KAAH,kBAATR,CAAAA,SAAS,4CAAf,CAiBP,MAAO,IAAMS,CAAAA,cAAc,2FAAG,gNAEcX,CAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,cAFd,yCAEPW,SAFO,mBAEfN,IAFe,CAEPM,SAFO,kCAGfA,SAAS,CAACC,GAAV,CAAc,SAAAV,OAAO,QAAGA,CAAAA,OAAO,CAACW,IAAX,EAArB,CAHe,kLAAH,kBAAdH,CAAAA,cAAc,2CAApB","sourcesContent":["import axios from'axios'\r\n\r\nconst url = \"https://covid19.mathdro.id/api/\";\r\n\r\n\r\n\r\nexport const fetchData = async (country) => {\r\n    let changedUrl = url;\r\n    if (country){\r\n        changedUrl = `${url}countries/${country}`;\r\n    }\r\n    try{\r\n        const {data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changedUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n        }catch(error)\r\n         {\r\n             return error;\r\n         }\r\n\r\n\r\n}\r\n\r\n\r\nexport const fetchCountries = async() => {\r\n    try{\r\n        const {data: { countries} } = await axios.get(`${url}countries`);\r\n        return countries.map(country=> country.name);\r\n        }\r\n        catch(error){\r\n            return error;\r\n        }   \r\n\r\n}"]},"metadata":{},"sourceType":"module"}