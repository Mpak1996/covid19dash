{"ast":null,"code":"import axios from 'axios';\nconst url = \"https://covid19.mathdro.id/api/\";\nconst urlc = \"https://covid19.mathdro.id/api//countries\";\nexport const fetchData = async () => {\n  try {\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(url);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {\n    return error;\n  }\n};\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {\n        countries\n      }\n    } = await axios.get(urlc);\n    return countries.map(country => country.name);\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"sources":["C:/Users/giann/covid19dash/src/service/api.js"],"names":["axios","url","urlc","fetchData","data","confirmed","recovered","deaths","lastUpdate","get","error","fetchCountries","countries","map","country","name"],"mappings":"AAAA,OAAOA,KAAP,MAAiB,OAAjB;AAEA,MAAMC,GAAG,GAAG,iCAAZ;AACA,MAAMC,IAAI,GAAG,2CAAb;AAGA,OAAO,MAAMC,SAAS,GAAG,YAAW;AAChC,MAAG;AACC,UAAM;AAACC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,MAAxB;AAAgCC,QAAAA;AAAhC;AAAP,QAAwD,MAAMR,KAAK,CAACS,GAAN,CAAUR,GAAV,CAApE;AACA,WAAO;AAAEI,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,MAAxB;AAAgCC,MAAAA;AAAhC,KAAP;AACC,GAHL,CAGK,OAAME,KAAN,EACA;AACI,WAAOA,KAAP;AACH;AAGT,CAVM;AAaP,OAAO,MAAMC,cAAc,GAAG,YAAW;AACrC,MAAG;AACC,UAAM;AAACP,MAAAA,IAAI,EAAE;AAAEQ,QAAAA;AAAF;AAAP,QAAwB,MAAMZ,KAAK,CAACS,GAAN,CAAUP,IAAV,CAApC;AACA,WAAOU,SAAS,CAACC,GAAV,CAAcC,OAAO,IAAGA,OAAO,CAACC,IAAhC,CAAP;AACC,GAHL,CAII,OAAML,KAAN,EAAY;AACR,WAAOA,KAAP;AACH;AAER,CATM","sourcesContent":["import axios from'axios'\r\n\r\nconst url = \"https://covid19.mathdro.id/api/\";\r\nconst urlc = \"https://covid19.mathdro.id/api//countries\";\r\n\r\n\r\nexport const fetchData = async() => {\r\n    try{\r\n        const {data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n        }catch(error)\r\n         {\r\n             return error;\r\n         }\r\n\r\n\r\n}\r\n\r\n\r\nexport const fetchCountries = async() => {\r\n    try{\r\n        const {data: { countries} } = await axios.get(urlc);\r\n        return countries.map(country=> country.name);\r\n        }\r\n        catch(error){\r\n            return error;\r\n        }   \r\n\r\n}"]},"metadata":{},"sourceType":"module"}